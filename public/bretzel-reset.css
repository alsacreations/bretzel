/* -------------------/*
 * Reset CSS "Bretzel"
 * Made par Alsacréations
 /* ------------------ */

/*
 * Un peu de documentation :
 * 1- Mais pourquoi @layer ? -> https://mayank.co/blog/css-reset-layer/
 * 2- Que sont les couleurs système ? -> https://blog.jim-nielsen.com/2021/css-system-colors/
 * 3- Qu'est ce que la police système (system-ui) ? -> https://drafts.csswg.org/css-fonts-4/#valdef-font-family-system-ui
 * 4- Mais pourquoi min-width: 0 sur tous les éléments ? -> https://raphaelgoetter.wordpress.com/2016/11/09/flexbox-min-width-0-is-the-new-zoom-1/
 * 5- C'est quoi l'unité dvh ? -> https://dev.to/frehner/css-vh-dvh-lvh-svh-and-vw-units-27k4
 * 6- C'est quoi text-decoration-skip-ink ? -> https://developer.mozilla.org/fr/docs/Web/CSS/text-decoration-skip-ink
 * 7- C'est quoi ARIA ? -> https://developer.mozilla.org/fr/docs/Web/Accessibility/ARIA
*/

/* On place tous les styles dans un layer reset de moindre spécificité*/
@layer reset {
  /* On adopte les couleurs système afin de s'adapter automatiquement en dark et light mode */
  :root {
    color-scheme: light dark;
  }

  /* On passe tout le monde en modèle border-box et on évite min-width: auto sur les flex- et grid-items */
  *,
  *::before,
  *::after {
    box-sizing: border-box;
    min-width: 0;
  }

  /* On prévoit une petite marge au-dessus des ancres ciblées */
  :target {
    scroll-margin-block: 1rem;
  }

  /* On évite les débordements de page et les zooms non désirés en landscape */
  html {
    overflow-wrap: break-word;
    -webkit-text-size-adjust: none;
  }

  /* On donne à body toute la hauteur + styles divers */
  body {
    min-height: 100dvh;
    margin: 0;
    font-family: system-ui, sans-serif;
    text-rendering: optimizeSpeed;
    line-height: 1.5;
  }

  /* On supprime les styles des listes ayant une class (version accessible) */
  :where(ol, ul)[class] {
    padding-left: 0;

    & > li::marker {
      content: "";
    }
  }

  /* On évite les débordements d'éléments */
  img,
  table,
  td,
  blockquote,
  pre,
  code,
  input,
  textarea,
  select,
  video,
  svg,
  iframe {
    max-width: 100%;
  }

  /* On réduit de la hauteur de ligne sur certains éléments */
  h1,
  h2,
  h3,
  h4,
  button,
  input,
  label {
    line-height: 1.1;
  }

  /* On améliore la typographie */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    text-wrap: balance;
  }
  p,
  li,
  figcaption {
    text-wrap: pretty;
  }

  /* On préserve le ratio d'affichage */
  iframe,
  img,
  input,
  select,
  textarea {
    height: auto;
  }

  /* On stylise par défaut des liens */
  a:not([class]) {
    text-decoration-skip-ink: auto;
  }

  /* On change ces éléments en block */
  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    display: block;
  }

  /* On harmonise des différences entre navigateurs */
  input,
  button,
  textarea,
  select {
    margin: 0;
    background-color: transparent;
    color: inherit;
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
    letter-spacing: inherit;
    vertical-align: middle;
  }
  form,
  fieldset {
    border: none;
  }
  fieldset {
    margin: 0;
    padding: 1em;
  }
  legend {
    max-width: 100%;
    border: 0;
    color: inherit;
    white-space: normal;
  }
  label {
    display: inline-block;
    cursor: pointer;
  }
  button {
    cursor: pointer;
  }
  textarea {
    overflow: auto;
    vertical-align: top;
    resize: vertical;
    white-space: pre-wrap;
  }

  /* On stylise les éléments préformatés */
  pre,
  code,
  kbd,
  samp {
    font-family: monospace, monospace;
    font-size: 1em;
  }
  pre {
    tab-size: 2;
    white-space: pre-wrap;
    line-height: normal;
    overflow: auto;
  }

  /* On stylise les SVG */
  svg:not([fill]) {
    fill: currentColor;
  }
  svg {
    overflow: visible;
  }
  svg * {
    transform-box: fill-box;
  }
  svg:has(symbol) {
    display: none;
  }

  /* On corrige des styles ARIA */
  [aria-busy="true"] {
    cursor: progress;
  }
  [aria-controls] {
    cursor: pointer;
  }
  [aria-disabled="true"],
  [disabled] {
    cursor: not-allowed;
  }
  [aria-hidden="false"][hidden] {
    display: revert;
  }
  [aria-hidden="false"][hidden]:not(:focus) {
    clip: rect(0, 0, 0, 0);
    position: absolute;
  }

  /* On désactive les animations selon les préférences utilisateur */
  @media (prefers-reduced-motion: reduce) {
    *,
    ::before,
    ::after {
      animation-delay: -1ms !important;
      animation-duration: 1ms !important;
      animation-iteration-count: 1 !important;
      background-attachment: initial !important;
      scroll-behavior: auto !important;
      transition-duration: 0s !important;
      transition-delay: 0s !important;
    }
  }

  /* On masque le contenu à l'écran tout en demeurant accessible aux assistances techniques.
  * Le choix de nommage est .visually-hidden et non .sr-only car ce dernier n'est censé s'adresser qu'aux "screen readers", ce qui n'est pas forcément le cas.
  * :focus et :active permettent au contenu d'être affiché lorsque les éléments reçoivent le focus (ex. skip-links)
  * Auteur : James Edwards; Source : https://www.tpgi.com/the-anatomy-of-visually-hidden/
  * Auteur : Gaël Poupard; Source : https://gist.github.com/ffoodd/000b59f431e3e64e4ce1a24d5bb36034
  */

  .visually-hidden:not(:focus):not(:active) {
    position: absolute !important;
    clip-path: inset(50%) !important;
    width: 1px !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    white-space: nowrap !important;
  }
}
